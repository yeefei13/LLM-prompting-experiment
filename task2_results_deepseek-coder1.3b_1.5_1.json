"C++ program rank by time complexity is a common practice. The most efficient (smallest one in terms of Big O notation which represents the upper bound) can be selected as having best overall performance for large-scale tasks, while more complicated programs or ones with smaller number iterations are ranked better due to their computational resources required on larger scale data sets ie lower order worst case scenario. 
Considering that you've given only three pieces of code and the third one has a complexity time is higher because it calls new which needs additional overhead, hence giving preference for this program over others who don\u2019t have more iterations to complete as quickly when compared with other programs having fewer overall steps or lesser loop counter. Hence:
Code 2 (Calling dynamic memory allocation in sumArray) and Code 3 both perform better than code one because they are less complex, simpler & faster for the same task due mainly towards lower number of operations required to be carried out while all these other codes use loops more intensively ie exponential time complexity.
"