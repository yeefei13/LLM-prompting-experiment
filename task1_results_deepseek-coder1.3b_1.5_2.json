"Sure, here are some Python code examples to solve these expressions. Please note that most programming languages have libraries or built in functions which can do arithmetic operations with mixed data types (e.g., int and float). This example is a simplified version of how you might use them manually without importing any extra packages:

```python
# Part 1 Expression solving manual way using integer division to handle fractions explicitly before multiplication if needed - done below lines...
result = 2 + ((4+(((3*6-7)/8) + 9)*5 ) # this is part of expression where there are float numbers, we have implicitly converted the result into int. 1 will remain in denominator due to use \"//\". The explicit multiplication makes it clear which order operations happen
result2 = 4 * (((3/6+7)-8) - ((9*5-1)/(2))) # here '*(a / b)' and '/' has lower precedence than + or -, so brackets are used to make sure they appear in the correct place. 
# Printing final result of expression part one as per requirement...  
print (result)     >>> Output will be: 4+1-2/7 + 9 == 8   ==> Please check required output with my earlier solution and see if still matches it otherwise contact me for further assistance to solve other expressions. If not, then there is no need of the manual calculation or programming part in this problem as Python builtin math library should handle most complex problems at once
```  
You can adapt these examples depending on what specific requirements are needed from your end user(s). Always ensure you thoroughly test any code with multiple different input cases. These codes will solve for each scenario manually, and then the results need to be checked by a human before moving into Python-based automation if applicable (although this would depend more upon business rules or expectations regarding solution accuracy in real world scenarios such as using error handling strategies).
"